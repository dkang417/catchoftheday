{"version":3,"sources":["helpers.js","components/StorePicker.js","components/Header.js","components/Order.js","components/AddFishForm.js","components/EditFishForm.js","components/Login.js","base.js","components/Inventory.js","sample-fishes.js","components/Fish.js","components/App.js","components/NotFound.js","components/Router.js","index.js"],"names":["formatPrice","cents","toLocaleString","style","currency","rando","arr","Math","floor","random","length","getFunName","adjectives","concat","StorePicker","myInput","React","createRef","goToStore","event","preventDefault","storeName","_this","current","value","props","history","push","react_default","a","createElement","className","onSubmit","this","type","ref","required","placeholder","defaultValue","Component","Header","tagline","Order","renderOrder","key","fish","fishes","count","order","isAvailable","status","transitionOptions","classNames","timeout","enter","exit","react_transition_group","component","name","price","onClick","removeFromOrder","_this2","orderIds","Object","keys","total","reduce","prevTotal","map","AddFishForm","nameRef","priceRef","statusRef","descRef","imageRef","createFish","parseFloat","desc","image","addFish","currentTarget","reset","EditFishForm","handleChange","console","log","updatedFish","objectSpread","defineProperty","updateFish","index","onChange","deleteFish","Login","authenticate","firebaseApp","firebase","initializeApp","apiKey","authDomain","databaseURL","base","Rebase","createClass","database","Inventory","state","uid","owner","authHandler","_callee","authData","store","regenerator_default","wrap","_context","prev","next","fetch","storeId","context","assertThisInitialized","sent","post","data","user","setState","stop","provider","authProvider","auth","signInWithPopup","then","logout","_callee2","_context2","signOut","onAuthStateChanged","_this3","components_EditFishForm","components_AddFishForm","loadSampleFishes","components_Login","fish1","fish2","fish3","fish4","fish5","fish6","fish7","fish8","fish9","Fish","_this$props$details","details","src","alt","disabled","addToOrder","App","Date","now","sampleFishes","params","match","localStorageRef","localStorage","getItem","JSON","parse","syncState","setItem","stringify","removeBinding","components_Header","components_Fish","components_Order","components_Inventory","NotFound","Router","BrowserRouter","Switch","Route","exact","path","render","components_Router","document","querySelector"],"mappings":"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","file":"static/js/main.7f74aee7.chunk.js","sourcesContent":["// javascript helper functions here\n\nexport function formatPrice(cents) {\n  return (cents / 100).toLocaleString(\"en-US\", {\n    style: \"currency\",\n    currency: \"USD\"\n  });\n}\n\nexport function rando(arr) {\n  return arr[Math.floor(Math.random() * arr.length)];\n}\n\nexport function slugify(text) {\n  return text\n    .toString()\n    .toLowerCase()\n    .replace(/\\s+/g, \"-\")\n    .replace(/[^\\w-]+/g, \"\")\n    .replace(/--+/g, \"-\")\n    .replace(/^-+/, \"\")\n    .replace(/-+$/, \"\");\n}\n\nexport function getFunName() {\n  const adjectives = [\n    \"adorable\",\n    \"beautiful\",\n    \"clean\",\n    \"drab\",\n    \"elegant\",\n    \"fancy\",\n    \"glamorous\",\n    \"handsome\",\n    \"long\",\n    \"magnificent\",\n    \"old-fashioned\",\n    \"plain\",\n    \"quaint\",\n    \"sparkling\",\n    \"ugliest\",\n    \"unsightly\",\n    \"angry\",\n    \"bewildered\",\n    \"clumsy\",\n    \"defeated\",\n    \"embarrassed\",\n    \"fierce\",\n    \"grumpy\",\n    \"helpless\",\n    \"itchy\",\n    \"jealous\",\n    \"lazy\",\n    \"mysterious\",\n    \"nervous\",\n    \"obnoxious\",\n    \"panicky\",\n    \"repulsive\",\n    \"scary\",\n    \"thoughtless\",\n    \"uptight\",\n    \"worried\"\n  ];\n\n  const nouns = [\n    \"women\",\n    \"men\",\n    \"children\",\n    \"teeth\",\n    \"feet\",\n    \"people\",\n    \"leaves\",\n    \"mice\",\n    \"geese\",\n    \"halves\",\n    \"knives\",\n    \"wives\",\n    \"lives\",\n    \"elves\",\n    \"loaves\",\n    \"potatoes\",\n    \"tomatoes\",\n    \"cacti\",\n    \"foci\",\n    \"fungi\",\n    \"nuclei\",\n    \"syllabuses\",\n    \"analyses\",\n    \"diagnoses\",\n    \"oases\",\n    \"theses\",\n    \"crises\",\n    \"phenomena\",\n    \"criteria\",\n    \"data\"\n  ];\n\n  return `${rando(adjectives)}-${rando(adjectives)}-${rando(nouns)}`;\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { getFunName } from '../helpers';\n\n\nclass StorePicker extends React.Component {\n    static propTypes = {\n        history: PropTypes.object\n    };\n\n    // this is creating the ref - on our input component\n    // ref={this.myInput} \n    myInput = React.createRef();\n\n    // binding this.  not binding will cause this to be undefined \n    // constructor() {\n    //     super();\n    //     this.goToStore = this.goToStore.bind(this);\n    // }\n\n    // another solution is using an arrow function  \n    goToStore = (event) => {\n        // stop form from submitting\n        event.preventDefault();\n        // get the text from input- dont touch the DOM sync text into state\n        const storeName = this.myInput.current.value;\n        // change the page to /store/whatever-they-entered\n        // using props here \n        this.props.history.push(`/store/${storeName}`);\n    };\n\n    render() {\n        return (\n            <form className=\"store-selector\" onSubmit={this.goToStore}>\n                <h2>please entere a store</h2>\n                <input\n                    type=\"text\"\n                    ref={this.myInput}\n                    required placeholder=\"store Name\"\n                    defaultValue={getFunName()}\n\n                />\n                <button type=\"submit\">Visit store -> </button>\n            </form>\n        )\n    }\n}\n\nexport default StorePicker;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\n// stateless function component \n// implicit return \nconst Header = props => (\n    <header className=\"top\">\n        <h1>\n            Zoey's {\" \"}\n            {/* <span className=\"ofThe\">\n                <span className=\"of\">mm</span>\n                <span className=\"the\">yum</span>\n            </span> */}\n            Cafe\n        </h1>\n        <h3 className=\"tagline\">\n            <span>{props.tagline}</span>\n        </h3>\n    </header>\n);\n\nHeader.propTypes = {\n    tagline: PropTypes.string.isRequired\n};\n\nexport default Header;\n\n// class Header extends React.Component {\n//     render() {\n//         return (\n//             <header className=\"top\">\n//                 <h1>\n//                     Catch\n//                 <span classname=\"ofThe\">\n//                         <span className=\"of\">of</span>\n//                         <span classname=\"the\">the</span>\n//                     </span>\n//                     Day\n//                 </h1>\n//                 <h3 className=\"tagline\">\n//                     <span>{this.props.tagline}</span>\n//                 </h3>\n//             </header>\n//         );\n//     }\n// }\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { formatPrice } from '../helpers';\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\n\n\nclass Order extends React.Component {\n    static propTypes = {\n        fishes: PropTypes.object,\n        order: PropTypes.object,\n        removeFromOrder: PropTypes.func\n    };\n\n    // render geting to big so separating into renderOrder function \n    renderOrder = (key) => {\n        const fish = this.props.fishes[key];\n        const count = this.props.order[key];\n        const isAvailable = fish && fish.status === 'available';\n        const transitionOptions = {\n            classNames: \"order\",\n            key: key,\n            timeout: { enter: 500, exit: 500 }\n        };\n\n        // make sure fish is loaded before we continue \n        if (!fish) return null;\n\n        if (!isAvailable) {\n            return (\n                <CSSTransition {...transitionOptions}>\n                    <li key={key}>\n                        Sorry {fish ? fish.name : 'fish'} is no longer available\n                    </li>\n                </CSSTransition>\n            );\n        }\n        return (\n            <CSSTransition {...transitionOptions}>\n                <li key={key}>\n                    <span>\n                        <TransitionGroup component=\"span\" className=\"count\">\n                            <CSSTransition\n                                classNames=\"count\"\n                                key={count}\n                                timeout={{ enter: 500, exit: 500 }}\n                            >\n                                <span>{count}</span>\n                            </CSSTransition>\n                        </TransitionGroup>\n                        lbs {fish.name}\n                        {formatPrice(count * fish.price)}\n                        <button onClick={() => this.props.removeFromOrder(key)}>\n                            &times;\n                        </button>\n                    </span>\n                </li>\n            </CSSTransition>\n        );\n    };\n\n\n\n    render() {\n        const orderIds = Object.keys(this.props.order);\n\n        const total = orderIds.reduce((prevTotal, key) => {\n            const fish = this.props.fishes[key];\n            const count = this.props.order[key];\n            const isAvailable = fish && fish.status === 'available';\n            if (isAvailable) {\n                return prevTotal + count * fish.price;\n            }\n            return prevTotal;\n        }, 0);\n\n        return (\n            <div className=\"order-wrap\">\n                <h2>Order </h2>\n                <TransitionGroup component=\"ul\" className=\"order\">\n                    {orderIds.map(this.renderOrder)}\n                </TransitionGroup>\n\n                <div className=\"total\">\n                    Total:\n                    <strong> {formatPrice(total)} </strong>\n                </div>\n            </div>\n        );\n    }\n}\nexport default Order;","import React from 'react';\nimport PropTypes from 'prop-types';\n\n\nclass AddFishForm extends React.Component {\n\n    nameRef = React.createRef();\n    priceRef = React.createRef();\n    statusRef = React.createRef();\n    descRef = React.createRef();\n    imageRef = React.createRef();\n\n    static propTypes = {\n        addFish: PropTypes.func\n    };\n    // needs arrow function since it is a created method\n    createFish = (event) => {\n        // stop the form from submitting\n        event.preventDefault();\n        // get the text from input\n        const fish = {\n            name: this.nameRef.current.value,\n            price: parseFloat(this.priceRef.current.value),\n            status: this.statusRef.current.value,\n            desc: this.descRef.current.value,\n            image: this.imageRef.current.value\n        };\n        // console.log(fish);\n        // passing state through props here \n        // update state from APP to inventory to here\n        // call add fish that lives in App\n        this.props.addFish(fish);\n\n        // refresh the form \n        event.currentTarget.reset();\n    };\n    render() {\n        return (\n            <form className=\"fish-edit\" onSubmit={this.createFish}>\n\n                <input name=\"name\" ref={this.nameRef} type=\"text\" placeholder=\"Name\" />\n                <input name=\"price\" ref={this.priceRef} type=\"text\" placeholder=\"Price\" />\n                <select name=\"status\" ref={this.statusRef}>\n                    <option value=\"available\"> Fresh! </option>\n                    <option value=\"unavailable\">Sold Out!</option>\n                </select>\n\n                <textarea name=\"desc\" ref={this.descRef} placeholder=\"Desc\" />\n                <input name=\"image\" ref={this.imageRef} type=\"text\" placeholder=\"Image\" />\n                <button type=\"submit\"> + Add Fish </button>\n            </form>\n        );\n    }\n}\nexport default AddFishForm;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass EditFishForm extends React.Component {\n\n    static propTypes = {\n        fish: PropTypes.shape({\n            image: PropTypes.string,\n            namedesc: PropTypes.string,\n            status: PropTypes.string,\n            price: PropTypes.number,\n        }),\n        index: PropTypes.string,\n        updateFish: PropTypes.func\n    };\n\n\n    handleChange = event => {\n        console.log(event.currentTarget.value);\n        // update that fish \n        // 1. Take a copy of current fish and change value \n        const updatedFish = {\n            ...this.props.fish,\n            [event.currentTarget.name]: event.currentTarget.value\n        };\n        this.props.updateFish(this.props.index, updatedFish);\n\n    };\n    render() {\n        return (\n            <div className=\"fish-edit\">\n                <input\n                    type=\"text\"\n                    name=\"name\"\n                    onChange={this.handleChange}\n                    value={this.props.fish.name}\n                />\n                <input\n                    type=\"text\"\n                    name=\"price\"\n                    onChange={this.handleChange}\n                    value={this.props.fish.name}\n                />\n                <select\n                    type=\"text\"\n                    name=\"status\"\n                    onChange={this.handleChange}\n                    value={this.props.fish.status}\n                >\n                    <option value=\"available\">Fresh </option>\n                    <option value=\"unavailable\"> Sold out </option>\n                </select>\n                <textarea\n                    name=\"desc\"\n                    onChange={this.handleChange}\n                    value={this.props.fish.desc}\n                />\n                <input\n                    type=\"text\"\n                    onChange={this.handleChange}\n                    name=\"image\"\n                />\n                {/* inline arrow function */}\n                <button onClick={() => this.props.deleteFish(this.props.index)} >Remove Fish</button>\n            </div>\n        );\n    }\n}\nexport default EditFishForm;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Login = (props) => (\n    <nav className=\"login\">\n        <h2> Inventory Login </h2>\n        <p>Please Sign in to manage your inventory: </p>\n        <button\n            className=\"github\"\n            onClick={() => props.authenticate('Github')}\n        >\n            Login With Github\n        </button>\n        <button\n            className=\"twitter\"\n            onClick={() => props.authenticate('Twitter')}\n        >\n            Login With Twitter\n        </button>\n\n    </nav>\n);\n\nLogin.propTypes = {\n    authenticate: PropTypes.func.isRequired\n};\n\nexport default Login;\n","import Rebase from 're-base';\nimport firebase from 'firebase';\n\nconst firebaseApp = firebase.initializeApp({\n    apiKey: \"AIzaSyCg9gtWZZmI4kchXxDqwQeicAJuwrH-964\",\n    authDomain: \"catch-of-the-day-david-kang.firebaseapp.com\",\n    databaseURL: \"https://catch-of-the-day-david-kang.firebaseio.com\"\n});\n\nconst base = Rebase.createClass(firebaseApp.database());\n\n// this is a named export \nexport { firebaseApp };\n\n// this is a default export \nexport default base;\n\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport firebase from 'firebase';\nimport AddFishForm from './AddFishForm';\nimport EditFishForm from './EditFishForm';\nimport Login from './Login';\nimport base, { firebaseApp } from '../base';\n\n\nclass Inventory extends React.Component {\n    static propTypes = {\n        fishes: PropTypes.object,\n        updateFish: PropTypes.func,\n        deleteFish: PropTypes.func,\n        loadSampleFishes: PropTypes.func\n    };\n\n    state = {\n        uid: null,\n        owner: null\n    };\n    // when we load page, firebase will check for logged in user\n    componentDidMount() {\n        firebase.auth().onAuthStateChanged(user => {\n            if (user) {\n                this.authHandler({ user });\n            }\n        })\n    }\n\n    // once someone signs in \n    authHandler = async authData => {\n        console.log(authData);\n        // 1- look up the current store in firebase database\n        const store = await base.fetch(this.props.storeId, { context: this });\n        console.log(store);\n        // 2- claim it if no owner \n        if (!store.owner) {\n            // save it as our own\n            await base.post(`${this.props.storeId}/owner`, {\n                data: authData.user.uid\n            })\n        }\n        // 3- set the state of the inventory component to reflect current user\n        this.setState({\n            uid: authData.user.uid,\n            owner: store.owner || authData.user.uid\n        });\n    }\n\n    authenticate = provider => {\n        // const authProvider = new firebase.auth.GithubAuthProvider();\n        // needs to be dynamic for github and twitter\n        const authProvider = new firebase.auth[`${provider}AuthProvider`]();\n        firebaseApp.auth().signInWithPopup(authProvider).then(this.authHandler);\n    };\n\n    logout = async () => {\n        // console.log('logging out');\n        await firebase.auth().signOut();\n        this.setState({ uid: null });\n    }\n\n    render() {\n        const logout = <button onClick={this.logout}>Log Out!</button>\n        // 1. check if they are logged in \n        if (!this.state.uid) {\n            return <Login authenticate={this.authenticate} />;\n        }\n        // 2. check if they are the owner of the store\n        if (this.state.uid !== this.state.owner) {\n            return <div>\n                <p> Sorry you are not the owner </p>\n                {logout}\n            </div>\n        }\n        // 3. they must be the onwer, just render inventory \n        return (\n            <div className=\"Inventory\">\n                <h2> Inventory </h2>\n                {logout}\n                {Object.keys(this.props.fishes).map(key =>\n                    <EditFishForm\n                        key={key}\n                        index={key}\n                        fish={this.props.fishes[key]}\n                        updateFish={this.props.updateFish}\n                        deleteFish={this.props.deleteFish}\n                    />)}\n                {/* inside props we have addfish and we pass it down again */}\n                <AddFishForm addFish={this.props.addFish} />\n\n                {/*  passed in through props from app.js */}\n                <button onClick={this.props.loadSampleFishes}> Load Sample Fishes </button>\n            </div>\n        );\n    }\n}\nexport default Inventory;","// This is just some sample data so you don't have to think of your own!\nconst fishes = {\n  fish1: {\n    name: \"Yummy Cupcake\",\n    image: \"/images/cupcake.png\",\n    desc:\n      \"Everyone’s favorite cupcake\",\n    price: 1724,\n    status: \"available\"\n  },\n\n  fish2: {\n    name: \"Lobster\",\n    image: \"/images/lobster.jpg\",\n    desc:\n      \"These tender, mouth-watering beauties are a fantastic hit at any dinner party.\",\n    price: 3200,\n    status: \"available\"\n  },\n\n  fish3: {\n    name: \"Sea Scallops\",\n    image: \"/images/scallops.jpg\",\n    desc:\n      \"Big, sweet and tender. True dry-pack scallops from the icey waters of Alaska. About 8-10 per pound\",\n    price: 1684,\n    status: \"unavailable\"\n  },\n\n  fish4: {\n    name: \"Mahi Mahi\",\n    image: \"/images/mahi.jpg\",\n    desc:\n      \"Lean flesh with a mild, sweet flavor profile, moderately firm texture and large, moist flakes. \",\n    price: 1129,\n    status: \"available\"\n  },\n\n  fish5: {\n    name: \"King Crab\",\n    image: \"/images/crab.jpg\",\n    desc:\n      \"Crack these open and enjoy them plain or with one of our cocktail sauces\",\n    price: 4234,\n    status: \"available\"\n  },\n\n  fish6: {\n    name: \"Atlantic Salmon\",\n    image: \"/images/salmon.jpg\",\n    desc:\n      \"This flaky, oily salmon is truly the king of the sea. Bake it, grill it, broil it...as good as it gets!\",\n    price: 1453,\n    status: \"available\"\n  },\n\n  fish7: {\n    name: \"Oysters\",\n    image: \"/images/oysters.jpg\",\n    desc: \"A soft plump oyster with a sweet salty flavor and a clean finish.\",\n    price: 2543,\n    status: \"available\"\n  },\n\n  fish8: {\n    name: \"Mussels\",\n    image: \"/images/mussels.jpg\",\n    desc:\n      \"The best mussels from the Pacific Northwest with a full-flavored and complex taste.\",\n    price: 425,\n    status: \"available\"\n  },\n\n  fish9: {\n    name: \"Jumbo Prawns\",\n    image: \"/images/prawns.jpg\",\n    desc:\n      \"With 21-25 two bite prawns in each pound, these sweet morsels are perfect for shish-kabobs.\",\n    price: 2250,\n    status: \"available\"\n  }\n};\n\nexport default fishes;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { formatPrice } from \"../helpers\";\n\n\nclass Fish extends React.Component {\n    static propTypes = {\n        details: PropTypes.shape({\n            image: PropTypes.string,\n            namedesc: PropTypes.string,\n            status: PropTypes.string,\n            price: PropTypes.number,\n        }),\n        addToOrder: PropTypes.func\n    }\n\n    render() {\n        // destructure our variables \n        const { image, name, price, desc, status } = this.props.details;\n\n        const isAvailable = status === 'available';\n\n        return (\n            <li className=\"menu-fish\">\n                <img src={image} alt={name} />\n                <h3 className=\"fish-name\">\n                    {name}\n                    <span className=\"price\"> {formatPrice(price)} </span>\n                </h3>\n                <p>{desc}</p>\n\n                <button\n                    disabled={!isAvailable}\n\n                    onClick={() => this.props.addToOrder(this.props.index)}\n                >\n                    {/* ternary statement      */}\n                    {isAvailable ? 'Add To Order' : 'Sold Out! '}\n\n                </button>\n\n            </li>\n\n        );\n    }\n}\nexport default Fish;\n","import React from 'react';\nimport Header from './Header';\nimport Order from './Order';\nimport Inventory from './Inventory';\nimport sampleFishes from '../sample-fishes';\nimport Fish from './Fish';\nimport base from '../base';\n\nclass App extends React.Component {\n    // creating state here \n    // initial state when first loaded\n    // what does state look like before we add items to state - \n    state = {\n        fishes: {},\n        order: {}\n    };\n    //state is the home and props is the car to get where it needs to be displayed\n\n    // lifecycle methods \n    componentDidMount() {\n        const { params } = this.props.match;\n        // first reinstate our localstorage  \n        // add local storage order into state\n        const localStorageRef = localStorage.getItem(params.storeId);\n        if (localStorageRef) {\n            this.setState({ order: JSON.parse(localStorageRef) });\n        }\n\n\n        this.ref = base.syncState(`${params.storeId}/fishes`, {\n            context: this,\n            state: 'fishes'\n        });\n    }\n\n    componentDidUpdate() {\n        // persisting order state with local storage\n        // when order gets modified. our local storage gets updated\n\n        localStorage.setItem(this.props.match.params.storeId, JSON.stringify(this.state.order));\n    }\n\n\n    // prevent data memory leaks when going back from one store to homepage\n    componentWillUnmount() {\n\n        base.removeBinding(this.ref);\n    }\n\n\n\n    // custom made method that takes a fish\n    // updating state of fishes object\n    // methods that update state and state need to live in the same component\n    addFish = (fish) => {\n        // to UPDATE STATE we need to setstate\n        // 1. take a copy of the existing state - never want to reach into state and mutate the original state\n        const fishes = { ...this.state.fishes };\n        // 2. add our new fish to fish variable \n        fishes[`fish${Date.now()}`] = fish;\n        // 3. set the new fishes object to state by calling method\n        this.setState({\n            fishes: fishes\n        });\n    };\n\n    // for any changes made in Inventory fish state updates \n    updateFish = (key, updatedFish) => {\n        // take a copy of current state \n        const fishes = { ...this.state.fishes };\n        // update that state by using key\n        fishes[key] = updatedFish;\n        // set that to state \n        this.setState({ fishes: fishes });\n    }\n\n    deleteFish = (key) => {\n        // 1. take a copy of state \n        const fishes = { ...this.state.fishes };\n        // 2. update the state by removing an item from state\n        // we are setting it to null because of firebase requirement \n        fishes[key] = null;\n        // 3. update the state \n        this.setState({ fishes: fishes });\n    }\n\n    loadSampleFishes = () => {\n        // console.log('PlEASE LOAD THE SAMPLE FISHES');\n        this.setState({ fishes: sampleFishes });\n    };\n\n\n    // update our (state) order for fishes and quantity of fishes \n    addToOrder = (key) => {\n        // 1.Take a copy of state since we dont want to mutate\n        const order = { ...this.state.order };\n        // 2. Either add to the order or update the number in our order\n        order[key] = order[key] + 1 || 1;\n        // 3.Call setstate to update our state object \n        this.setState({ order: order });\n    }\n\n    removeFromOrder = key => {\n        // 1.take a copy of state \n        const order = { ...this.state.order };\n        // 2. remove that item from the order\n        delete order[key];\n        // 3.Call setstate to update our state object \n        this.setState({ order: order });\n    }\n\n\n\n    render() {\n        return (\n            <div className=\"catch-of-the-day\">\n                <div className=\"menu\">\n                    <Header tagline=\"We are foodies\" />\n\n                    <ul className=\"fishes\">\n\n                        {Object.keys(this.state.fishes).map(key =>\n                            <Fish\n                                key={key}\n                                index={key}\n                                details={this.state.fishes[key]}\n                                addToOrder={this.addToOrder}\n                            />)\n                        }\n                    </ul>\n\n                </div>\n                <Order\n                    fishes={this.state.fishes}\n                    order={this.state.order}\n                    removeFromOrder={this.removeFromOrder}\n                />\n\n                {/* inventory passes down addfish and loadsamplefishes in props */}\n                <Inventory\n                    addFish={this.addFish}\n                    updateFish={this.updateFish}\n                    deleteFish={this.deleteFish}\n                    loadSampleFishes={this.loadSampleFishes}\n                    fishes={this.state.fishes}\n                    storeId={this.props.match.params.storeId}\n                />\n\n            </div>\n        );\n    }\n}\n\nexport default App;\n","import React from 'react';\n\n//stateless functional component \nconst NotFound = () => (\n    <div>\n        <h1>Not Found?!?! </h1>\n\n    </div>\n);\n\nexport default NotFound;\n","import React from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport StorePicker from './StorePicker';\nimport App from './App';\nimport NotFound from './NotFound';\n\n//stateless functional component \nconst Router = () => (\n    <BrowserRouter>\n        <Switch>\n            <Route exact path=\"/\" component={StorePicker} />\n            <Route path=\"/store/:storeId\" component={App} />\n            <Route component={NotFound} />\n        </Switch>\n    </BrowserRouter>\n);\n\nexport default Router;\n","import React from 'react';\nimport { render } from 'react-dom';\nimport Router from './components/Router';\nimport \"./css/style.css\";\n\n\nrender(<Router />, document.querySelector('#main'));\n"],"sourceRoot":""}